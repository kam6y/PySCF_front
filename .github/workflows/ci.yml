name: CI

on:
  push:
    branches: [ main, develop, "ver.*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        activate-environment: pyscf-env
        environment-file: .github/environment.yml
        python-version: 3.12
        auto-activate-base: false
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Generate code from OpenAPI spec
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        npm run codegen
    
    - name: Run Python tests
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        cd src/python
        python -m pytest tests/ -v
    
    - name: Build frontend (development)
      run: npm run dev:webpack
    
    - name: Build Python backend
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        npm run build:python
    
    - name: Build frontend (production)
      run: npm run build:webpack
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}
        path: |
          dist/
          python_dist/
        retention-days: 7

  lint-and-type-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Type check TypeScript
      run: npx tsc --noEmit
    
    - name: Check code formatting (if prettier is available)
      run: |
        if npm list prettier &>/dev/null; then
          npx prettier --check "src/**/*.{ts,tsx,js,jsx}"
        else
          echo "Prettier not configured, skipping format check"
        fi
      continue-on-error: true