name: CI

on:
  push:
    branches: [ main, develop, "ver.*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Cache conda environment
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('.github/environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        activate-environment: pyscf-env
        environment-file: .github/environment.yml
        python-version: 3.12
        auto-activate-base: false
        use-only-tar-bz2: true
    
    - name: Install Node.js dependencies
      run: npm ci --legacy-peer-deps

    - name: Verify conda environment
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        npm run verify-env

    - name: Generate code from OpenAPI spec
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        npm run codegen

    - name: Run Python tests
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        cd src/python
        python -m pytest tests/ -v

    - name: Build application (production)
      shell: bash -l {0}
      run: |
        conda activate pyscf-env
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}
        path: |
          dist/
          conda_env/
        retention-days: 7

  lint-and-type-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Node.js dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Type check TypeScript
      run: npx tsc --noEmit
    
    - name: Check code formatting
      run: npm run format:check