version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: dev_root_password
      MYSQL_DATABASE: pyscf_dev
      MYSQL_USER: pyscf_user
      MYSQL_PASSWORD: pyscf_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema:/docker-entrypoint-initdb.d
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
    networks:
      - pyscf_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=mysql+pymysql://pyscf_user:pyscf_password@mysql:3306/pyscf_dev
      - GRPC_PORT=50051
      - MCP_SERVER_ENABLED=false
    ports:
      - "50051:50051"  # gRPC
      - "8000:8000"    # FastAPI (for web interface)
    volumes:
      - ./backend/src:/app/src:ro
      - calculation_data:/app/data
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pyscf_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Note: Flutter frontend requires local development
  # Use 'flutter run' locally instead of Docker for GUI apps

  # phpMyAdmin (for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: dev_root_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - pyscf_network

volumes:
  mysql_data:
  calculation_data:

networks:
  pyscf_network:
    driver: bridge