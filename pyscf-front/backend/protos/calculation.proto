syntax = "proto3";

package pyscf_front;

// Basic types
message Atom {
  string symbol = 1;
  double x = 2;
  double y = 3;
  double z = 4;
}

message Molecule {
  string id = 1;
  string name = 2;
  string formula = 3;
  repeated Atom atoms = 4;
  int32 charge = 5;
  int32 multiplicity = 6;
  double molecular_weight = 7;
  string symmetry = 8;
}

message Instance {
  string id = 1;
  string name = 2;
  string description = 3;
  string status = 4;
  string created_at = 5;
  string updated_at = 6;
}

// System information
message SystemResources {
  int32 cpu_cores = 1;
  int64 total_memory_mb = 2;
}

message SystemInfo {
  string version = 1;
  string python_version = 2;
  string pyscf_version = 3;
  bool gpu_available = 4;
  SystemResources resources = 5;
  repeated string available_methods = 6;
  repeated string available_basis_sets = 7;
}

// Calculation types
enum CalculationStatus {
  CALCULATION_STATUS_UNKNOWN = 0;
  CALCULATION_STATUS_PENDING = 1;
  CALCULATION_STATUS_RUNNING = 2;
  CALCULATION_STATUS_COMPLETED = 3;
  CALCULATION_STATUS_FAILED = 4;
  CALCULATION_STATUS_CANCELLED = 5;
}

message CalculationProgress {
  string job_id = 1;
  string current_step = 2;
  double progress_percentage = 3;
  string message = 4;
  CalculationStatus status = 5;
  int64 timestamp = 6;
}

// Energy and orbital data
message EnergyData {
  double total_energy = 1;
  double homo_energy = 2;
  double lumo_energy = 3;
  double homo_lumo_gap = 4;
  double nuclear_repulsion = 5;
  double electronic_energy = 6;
}

message OrbitalData {
  int32 index = 1;
  double energy = 2;
  double occupancy = 3;
  string type = 4; // "homo", "lumo", "occupied", "virtual"
}

// Request/Response messages
message Empty {}

message HealthRequest {}

message HealthResponse {
  bool healthy = 1;
  string status = 2;
  string details = 3;
}

message SystemInfoRequest {}

message SystemInfoResponse {
  bool success = 1;
  string message = 2;
  SystemInfo system_info = 3;
}

message MoleculeRequest {
  string name = 1;
  string formula = 2;
  repeated Atom atoms = 3;
  int32 charge = 4;
  int32 multiplicity = 5;
}

message MoleculeResponse {
  bool success = 1;
  string message = 2;
  Molecule molecule = 3;
}

message InstanceRequest {
  string name = 1;
  string description = 2;
  string molecule_id = 3;
  string project_id = 4;
}

message InstanceResponse {
  bool success = 1;
  string message = 2;
  Instance instance = 3;
}

message CalculationRequest {
  string instance_id = 1;
  string method = 2;
  string basis_set = 3;
  map<string, string> parameters = 4;
  int32 max_iterations = 5;
  int32 priority = 6;
}

message ResultRequest {
  string calculation_id = 1;
  repeated string result_types = 2;
}

message ResultResponse {
  bool success = 1;
  string message = 2;
  EnergyData energy_data = 3;
  repeated OrbitalData orbitals = 4;
  map<string, string> additional_data = 5;
}

message CancelRequest {
  string calculation_id = 1;
}

message CancelResponse {
  bool success = 1;
  string message = 2;
}

// Main service definition
service CalculationService {
  // Health and system info
  rpc HealthCheck(HealthRequest) returns (HealthResponse);
  rpc GetSystemInfo(SystemInfoRequest) returns (SystemInfoResponse);
  
  // Molecule management
  rpc CreateMolecule(MoleculeRequest) returns (MoleculeResponse);
  rpc GetMolecule(MoleculeRequest) returns (MoleculeResponse);
  
  // Instance management
  rpc CreateInstance(InstanceRequest) returns (InstanceResponse);
  rpc GetInstance(InstanceRequest) returns (InstanceResponse);
  
  // Calculation execution
  rpc StartCalculation(CalculationRequest) returns (stream CalculationProgress);
  rpc GetResults(ResultRequest) returns (ResultResponse);
  rpc CancelCalculation(CancelRequest) returns (CancelResponse);
}