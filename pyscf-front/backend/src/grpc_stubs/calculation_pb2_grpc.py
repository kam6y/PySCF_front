# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import calculation_pb2 as calculation__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in calculation_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CalculationServiceStub(object):
    """CalculationService は量子化学計算を管理するメインサービス
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMolecule = channel.unary_unary(
                '/pyscf_front.CalculationService/CreateMolecule',
                request_serializer=calculation__pb2.CreateMoleculeRequest.SerializeToString,
                response_deserializer=calculation__pb2.MoleculeResponse.FromString,
                _registered_method=True)
        self.GetMolecule = channel.unary_unary(
                '/pyscf_front.CalculationService/GetMolecule',
                request_serializer=calculation__pb2.GetMoleculeRequest.SerializeToString,
                response_deserializer=calculation__pb2.MoleculeResponse.FromString,
                _registered_method=True)
        self.UpdateMolecule = channel.unary_unary(
                '/pyscf_front.CalculationService/UpdateMolecule',
                request_serializer=calculation__pb2.UpdateMoleculeRequest.SerializeToString,
                response_deserializer=calculation__pb2.MoleculeResponse.FromString,
                _registered_method=True)
        self.DeleteMolecule = channel.unary_unary(
                '/pyscf_front.CalculationService/DeleteMolecule',
                request_serializer=calculation__pb2.DeleteMoleculeRequest.SerializeToString,
                response_deserializer=calculation__pb2.DeleteMoleculeResponse.FromString,
                _registered_method=True)
        self.CreateInstance = channel.unary_unary(
                '/pyscf_front.CalculationService/CreateInstance',
                request_serializer=calculation__pb2.CreateInstanceRequest.SerializeToString,
                response_deserializer=calculation__pb2.InstanceResponse.FromString,
                _registered_method=True)
        self.GetInstance = channel.unary_unary(
                '/pyscf_front.CalculationService/GetInstance',
                request_serializer=calculation__pb2.GetInstanceRequest.SerializeToString,
                response_deserializer=calculation__pb2.InstanceResponse.FromString,
                _registered_method=True)
        self.ListInstances = channel.unary_unary(
                '/pyscf_front.CalculationService/ListInstances',
                request_serializer=calculation__pb2.ListInstancesRequest.SerializeToString,
                response_deserializer=calculation__pb2.ListInstancesResponse.FromString,
                _registered_method=True)
        self.UpdateInstance = channel.unary_unary(
                '/pyscf_front.CalculationService/UpdateInstance',
                request_serializer=calculation__pb2.UpdateInstanceRequest.SerializeToString,
                response_deserializer=calculation__pb2.InstanceResponse.FromString,
                _registered_method=True)
        self.DeleteInstance = channel.unary_unary(
                '/pyscf_front.CalculationService/DeleteInstance',
                request_serializer=calculation__pb2.DeleteInstanceRequest.SerializeToString,
                response_deserializer=calculation__pb2.DeleteInstanceResponse.FromString,
                _registered_method=True)
        self.StartCalculation = channel.unary_stream(
                '/pyscf_front.CalculationService/StartCalculation',
                request_serializer=calculation__pb2.StartCalculationRequest.SerializeToString,
                response_deserializer=calculation__pb2.CalculationProgress.FromString,
                _registered_method=True)
        self.CancelCalculation = channel.unary_unary(
                '/pyscf_front.CalculationService/CancelCalculation',
                request_serializer=calculation__pb2.CancelCalculationRequest.SerializeToString,
                response_deserializer=calculation__pb2.CancelCalculationResponse.FromString,
                _registered_method=True)
        self.GetCalculationStatus = channel.unary_unary(
                '/pyscf_front.CalculationService/GetCalculationStatus',
                request_serializer=calculation__pb2.GetCalculationStatusRequest.SerializeToString,
                response_deserializer=calculation__pb2.CalculationStatusResponse.FromString,
                _registered_method=True)
        self.GetResults = channel.unary_unary(
                '/pyscf_front.CalculationService/GetResults',
                request_serializer=calculation__pb2.GetResultsRequest.SerializeToString,
                response_deserializer=calculation__pb2.ResultsResponse.FromString,
                _registered_method=True)
        self.ExportResults = channel.unary_unary(
                '/pyscf_front.CalculationService/ExportResults',
                request_serializer=calculation__pb2.ExportResultsRequest.SerializeToString,
                response_deserializer=calculation__pb2.ExportResultsResponse.FromString,
                _registered_method=True)
        self.GetJobQueue = channel.unary_unary(
                '/pyscf_front.CalculationService/GetJobQueue',
                request_serializer=calculation__pb2.GetJobQueueRequest.SerializeToString,
                response_deserializer=calculation__pb2.JobQueueResponse.FromString,
                _registered_method=True)
        self.UpdateJobPriority = channel.unary_unary(
                '/pyscf_front.CalculationService/UpdateJobPriority',
                request_serializer=calculation__pb2.UpdateJobPriorityRequest.SerializeToString,
                response_deserializer=calculation__pb2.UpdateJobPriorityResponse.FromString,
                _registered_method=True)
        self.GetSystemInfo = channel.unary_unary(
                '/pyscf_front.CalculationService/GetSystemInfo',
                request_serializer=calculation__pb2.GetSystemInfoRequest.SerializeToString,
                response_deserializer=calculation__pb2.SystemInfoResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/pyscf_front.CalculationService/HealthCheck',
                request_serializer=calculation__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=calculation__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class CalculationServiceServicer(object):
    """CalculationService は量子化学計算を管理するメインサービス
    """

    def CreateMolecule(self, request, context):
        """分子操作
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMolecule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstance(self, request, context):
        """インスタンス操作
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCalculation(self, request, context):
        """計算実行
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCalculation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCalculationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResults(self, request, context):
        """結果取得
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobQueue(self, request, context):
        """ジョブ管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateJobPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSystemInfo(self, request, context):
        """システム情報
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMolecule,
                    request_deserializer=calculation__pb2.CreateMoleculeRequest.FromString,
                    response_serializer=calculation__pb2.MoleculeResponse.SerializeToString,
            ),
            'GetMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMolecule,
                    request_deserializer=calculation__pb2.GetMoleculeRequest.FromString,
                    response_serializer=calculation__pb2.MoleculeResponse.SerializeToString,
            ),
            'UpdateMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMolecule,
                    request_deserializer=calculation__pb2.UpdateMoleculeRequest.FromString,
                    response_serializer=calculation__pb2.MoleculeResponse.SerializeToString,
            ),
            'DeleteMolecule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMolecule,
                    request_deserializer=calculation__pb2.DeleteMoleculeRequest.FromString,
                    response_serializer=calculation__pb2.DeleteMoleculeResponse.SerializeToString,
            ),
            'CreateInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstance,
                    request_deserializer=calculation__pb2.CreateInstanceRequest.FromString,
                    response_serializer=calculation__pb2.InstanceResponse.SerializeToString,
            ),
            'GetInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstance,
                    request_deserializer=calculation__pb2.GetInstanceRequest.FromString,
                    response_serializer=calculation__pb2.InstanceResponse.SerializeToString,
            ),
            'ListInstances': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstances,
                    request_deserializer=calculation__pb2.ListInstancesRequest.FromString,
                    response_serializer=calculation__pb2.ListInstancesResponse.SerializeToString,
            ),
            'UpdateInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstance,
                    request_deserializer=calculation__pb2.UpdateInstanceRequest.FromString,
                    response_serializer=calculation__pb2.InstanceResponse.SerializeToString,
            ),
            'DeleteInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstance,
                    request_deserializer=calculation__pb2.DeleteInstanceRequest.FromString,
                    response_serializer=calculation__pb2.DeleteInstanceResponse.SerializeToString,
            ),
            'StartCalculation': grpc.unary_stream_rpc_method_handler(
                    servicer.StartCalculation,
                    request_deserializer=calculation__pb2.StartCalculationRequest.FromString,
                    response_serializer=calculation__pb2.CalculationProgress.SerializeToString,
            ),
            'CancelCalculation': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCalculation,
                    request_deserializer=calculation__pb2.CancelCalculationRequest.FromString,
                    response_serializer=calculation__pb2.CancelCalculationResponse.SerializeToString,
            ),
            'GetCalculationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCalculationStatus,
                    request_deserializer=calculation__pb2.GetCalculationStatusRequest.FromString,
                    response_serializer=calculation__pb2.CalculationStatusResponse.SerializeToString,
            ),
            'GetResults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResults,
                    request_deserializer=calculation__pb2.GetResultsRequest.FromString,
                    response_serializer=calculation__pb2.ResultsResponse.SerializeToString,
            ),
            'ExportResults': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportResults,
                    request_deserializer=calculation__pb2.ExportResultsRequest.FromString,
                    response_serializer=calculation__pb2.ExportResultsResponse.SerializeToString,
            ),
            'GetJobQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobQueue,
                    request_deserializer=calculation__pb2.GetJobQueueRequest.FromString,
                    response_serializer=calculation__pb2.JobQueueResponse.SerializeToString,
            ),
            'UpdateJobPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateJobPriority,
                    request_deserializer=calculation__pb2.UpdateJobPriorityRequest.FromString,
                    response_serializer=calculation__pb2.UpdateJobPriorityResponse.SerializeToString,
            ),
            'GetSystemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemInfo,
                    request_deserializer=calculation__pb2.GetSystemInfoRequest.FromString,
                    response_serializer=calculation__pb2.SystemInfoResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=calculation__pb2.HealthCheckRequest.FromString,
                    response_serializer=calculation__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pyscf_front.CalculationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pyscf_front.CalculationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CalculationService(object):
    """CalculationService は量子化学計算を管理するメインサービス
    """

    @staticmethod
    def CreateMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/CreateMolecule',
            calculation__pb2.CreateMoleculeRequest.SerializeToString,
            calculation__pb2.MoleculeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetMolecule',
            calculation__pb2.GetMoleculeRequest.SerializeToString,
            calculation__pb2.MoleculeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/UpdateMolecule',
            calculation__pb2.UpdateMoleculeRequest.SerializeToString,
            calculation__pb2.MoleculeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMolecule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/DeleteMolecule',
            calculation__pb2.DeleteMoleculeRequest.SerializeToString,
            calculation__pb2.DeleteMoleculeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/CreateInstance',
            calculation__pb2.CreateInstanceRequest.SerializeToString,
            calculation__pb2.InstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetInstance',
            calculation__pb2.GetInstanceRequest.SerializeToString,
            calculation__pb2.InstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListInstances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/ListInstances',
            calculation__pb2.ListInstancesRequest.SerializeToString,
            calculation__pb2.ListInstancesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/UpdateInstance',
            calculation__pb2.UpdateInstanceRequest.SerializeToString,
            calculation__pb2.InstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/DeleteInstance',
            calculation__pb2.DeleteInstanceRequest.SerializeToString,
            calculation__pb2.DeleteInstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartCalculation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/pyscf_front.CalculationService/StartCalculation',
            calculation__pb2.StartCalculationRequest.SerializeToString,
            calculation__pb2.CalculationProgress.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelCalculation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/CancelCalculation',
            calculation__pb2.CancelCalculationRequest.SerializeToString,
            calculation__pb2.CancelCalculationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCalculationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetCalculationStatus',
            calculation__pb2.GetCalculationStatusRequest.SerializeToString,
            calculation__pb2.CalculationStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetResults',
            calculation__pb2.GetResultsRequest.SerializeToString,
            calculation__pb2.ResultsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExportResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/ExportResults',
            calculation__pb2.ExportResultsRequest.SerializeToString,
            calculation__pb2.ExportResultsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJobQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetJobQueue',
            calculation__pb2.GetJobQueueRequest.SerializeToString,
            calculation__pb2.JobQueueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateJobPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/UpdateJobPriority',
            calculation__pb2.UpdateJobPriorityRequest.SerializeToString,
            calculation__pb2.UpdateJobPriorityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSystemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/GetSystemInfo',
            calculation__pb2.GetSystemInfoRequest.SerializeToString,
            calculation__pb2.SystemInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pyscf_front.CalculationService/HealthCheck',
            calculation__pb2.HealthCheckRequest.SerializeToString,
            calculation__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
