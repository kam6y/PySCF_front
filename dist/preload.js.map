{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA,qC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;ACNsD;AACtD;AACA;AACA,mDAAa;AACb;AACA,uBAAuB,iDAAW;AAClC,0BAA0B,iDAAW;AACrC,0BAA0B,iDAAW;AACrC;AACA,6BAA6B,iDAAW;AACxC;AACA;AACA,QAAQ,iDAAW;AACnB,KAAK;AACL;AACA;AACA,QAAQ,iDAAW;AACnB;AACA,CAAC","sources":["webpack://pyscf_native_app/external node-commonjs \"electron\"","webpack://pyscf_native_app/webpack/bootstrap","webpack://pyscf_native_app/webpack/runtime/compat get default export","webpack://pyscf_native_app/webpack/runtime/define property getters","webpack://pyscf_native_app/webpack/runtime/hasOwnProperty shorthand","webpack://pyscf_native_app/webpack/runtime/make namespace object","webpack://pyscf_native_app/./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { contextBridge, ipcRenderer } from \"electron\";\nconsole.log(\"preloaded!\");\n// Expose window control APIs to the renderer process\ncontextBridge.exposeInMainWorld(\"electronAPI\", {\n    // Window controls\n    closeWindow: () => ipcRenderer.invoke(\"window-close\"),\n    minimizeWindow: () => ipcRenderer.invoke(\"window-minimize\"),\n    maximizeWindow: () => ipcRenderer.invoke(\"window-maximize\"),\n    // Check if window is maximized\n    isWindowMaximized: () => ipcRenderer.invoke(\"window-is-maximized\"),\n    // Listen to window state changes\n    onWindowStateChange: (callback) => {\n        ipcRenderer.on(\"window-state-changed\", (event, isMaximized) => callback(isMaximized));\n    },\n    // Remove listeners\n    removeAllListeners: (channel) => {\n        ipcRenderer.removeAllListeners(channel);\n    }\n});\n"],"names":[],"sourceRoot":""}