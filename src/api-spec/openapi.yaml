openapi: 3.1.1
info:
  title: PySCF Native App API
  description: API for quantum chemistry calculations using PySCF with PubChem and SMILES integration
  version: 0.3.0
  license:
    name: Apache-2.0
    url: https://opensource.org/licenses/Apache-2.0

servers:
  - url: http://127.0.0.1:5000
    description: Local development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Check if the API server is running
      operationId: healthCheck
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/pubchem/search:
    post:
      summary: Search PubChem for compounds
      description: Search PubChem by name, CID, or formula and return 3D structure in XYZ format
      operationId: searchPubChem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PubChemSearchRequest'
      responses:
        '200':
          description: Compound found and XYZ generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubChemSearchResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Compound not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/smiles/convert:
    post:
      summary: Convert SMILES to XYZ format
      description: Convert a SMILES string to 3D XYZ molecular structure
      operationId: convertSmiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMILESConvertRequest'
      responses:
        '200':
          description: SMILES converted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMILESConvertResponse'
        '400':
          description: Invalid SMILES string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/pubchem/validate:
    post:
      summary: Validate XYZ format
      description: Validate an XYZ format string
      operationId: validateXYZ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XYZValidateRequest'
      responses:
        '200':
          description: XYZ validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XYZValidateResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculate:
    post:
      summary: Start quantum chemistry calculation
      description: Start a calculation in the background
      operationId: startCalculation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuantumCalculationRequest'
      responses:
        '202':
          description: Calculation queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCalculationResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to queue calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations:
    get:
      summary: List all calculations
      description: Get a list of all available calculation directories
      operationId: listCalculations
      responses:
        '200':
          description: List of calculations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationListResponse'
        '500':
          description: Failed to list calculations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations/{calculationId}:
    get:
      summary: Get calculation details
      description: Get detailed information about a specific calculation
      operationId: getCalculationDetails
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
      responses:
        '200':
          description: Calculation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDetailsResponse'
        '404':
          description: Calculation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to get calculation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update calculation metadata
      description: Update calculation name and other metadata
      operationId: updateCalculation
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationUpdateRequest'
      responses:
        '200':
          description: Calculation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationUpdateResponse'
        '404':
          description: Calculation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Name conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to update calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete calculation
      description: Delete a calculation and all its associated files
      operationId: deleteCalculation
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
      responses:
        '200':
          description: Calculation deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculationDeleteResponse'
        '404':
          description: Calculation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations/{calculationId}/orbitals:
    get:
      summary: Get molecular orbital information
      description: Get list of all molecular orbitals with energies and indices
      operationId: getOrbitals
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
      responses:
        '200':
          description: Molecular orbital information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitalsResponse'
        '404':
          description: Calculation not found or no orbital data available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to get orbital information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations/{calculationId}/orbitals/{orbitalIndex}/cube:
    get:
      summary: Generate and get molecular orbital CUBE file
      description: Generate CUBE file for specific molecular orbital visualization
      operationId: getOrbitalCube
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
        - name: orbitalIndex
          in: path
          required: true
          description: Molecular orbital index
          schema:
            type: integer
            minimum: 0
        - name: gridSize
          in: query
          required: false
          description: Grid size for CUBE file generation (default 80)
          schema:
            type: integer
            minimum: 40
            maximum: 120
            default: 80
        - name: isovaluePos
          in: query
          required: false
          description: Positive isovalue for orbital visualization (default 0.02)
          schema:
            type: number
            minimum: 0.001
            maximum: 0.1
            default: 0.02
        - name: isovalueNeg
          in: query
          required: false
          description: Negative isovalue for orbital visualization (default -0.02)
          schema:
            type: number
            minimum: -0.1
            maximum: -0.001
            default: -0.02
      responses:
        '200':
          description: Orbital CUBE file data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrbitalCubeResponse'
        '404':
          description: Calculation or orbital not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to generate orbital CUBE file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations/{calculationId}/orbitals/cube-files:
    get:
      summary: List CUBE files for a calculation
      description: List all saved CUBE files for molecular orbitals in a calculation
      operationId: listCubeFiles
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
      responses:
        '200':
          description: CUBE files list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CubeFilesListResponse'
        '404':
          description: Calculation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to retrieve CUBE files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete CUBE files for a calculation
      description: Delete CUBE files for specific orbital or all orbitals in a calculation
      operationId: deleteCubeFiles
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
        - name: orbital_index
          in: query
          required: false
          description: Specific orbital index to delete (if not provided, deletes all)
          schema:
            type: integer
      responses:
        '200':
          description: CUBE files deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CubeFilesDeleteResponse'
        '404':
          description: Calculation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to delete CUBE files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/calculations/{calculationId}/ir-spectrum:
    get:
      summary: Generate IR spectrum for a calculation
      description: Generate theoretical IR spectrum from vibrational frequency data with scale factor corrections and Lorentzian broadening
      operationId: getIRSpectrum
      parameters:
        - name: calculationId
          in: path
          required: true
          description: Unique calculation ID
          schema:
            type: string
        - name: broadening_fwhm
          in: query
          required: false
          description: Full width at half maximum for Lorentzian broadening in cm⁻¹
          schema:
            type: number
            format: float
            default: 100.0
            minimum: 0.1
            maximum: 1000.0
        - name: x_min
          in: query
          required: false
          description: Minimum wavenumber for spectrum range in cm⁻¹
          schema:
            type: number
            format: float
            default: 400.0
            minimum: 0.0
        - name: x_max
          in: query
          required: false
          description: Maximum wavenumber for spectrum range in cm⁻¹
          schema:
            type: number
            format: float
            default: 4000.0
            maximum: 10000.0
        - name: show_peaks
          in: query
          required: false
          description: Whether to mark individual peaks in the plot
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: IR spectrum generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IRSpectrumResponse'
        '400':
          description: Invalid parameters or calculation not completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Calculation not found or no frequency data available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to generate IR spectrum
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/quantum/supported-parameters:
    get:
      summary: Get supported quantum chemistry parameters
      description: Get lists of supported calculation methods, basis functions, exchange-correlation functionals, and solvents
      operationId: getSupportedParameters
      responses:
        '200':
          description: Supported parameters retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedParametersResponse'
        '500':
          description: Failed to retrieve supported parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/settings:
    get:
      summary: Get application settings
      description: Retrieve current application settings including parallel processing limits
      operationId: getSettings
      responses:
        '200':
          description: Settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '500':
          description: Failed to retrieve settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update application settings
      description: Update application settings including parallel processing limits
      operationId: updateSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsUpdateRequest'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '400':
          description: Invalid settings data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Failed to update settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/system/resource-status:
    get:
      summary: Get system resource status
      description: Get current system resource information, constraints, and allocation status
      operationId: getSystemResourceStatus
      responses:
        '200':
          description: System resource status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemResourceResponse'
        '500':
          description: Failed to retrieve system resource status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Enums
    SearchType:
      type: string
      enum: [name, cid, formula]
      description: Type of PubChem search

    SolventMethod:
      type: string
      enum: [none, ief-pcm, c-pcm, cosmo, ssvpe, ddcosmo]
      description: Solvent calculation method

    CalculationMethod:
      type: string
      enum: [DFT, HF, MP2, CCSD, CCSD_T, TDDFT]
      description: Quantum calculation method

    CalculationStatus:
      type: string
      enum: [pending, running, completed, error, waiting]
      description: Status of a calculation

    # Request Models
    PubChemSearchRequest:
      type: object
      required: [query]
      properties:
        query:
          type: string
          minLength: 1
          description: Search query for PubChem
        search_type:
          $ref: '#/components/schemas/SearchType'
          default: name

    SMILESConvertRequest:
      type: object
      required: [smiles]
      properties:
        smiles:
          type: string
          minLength: 1
          description: SMILES string to convert to XYZ format

    XYZValidateRequest:
      type: object
      required: [xyz]
      properties:
        xyz:
          type: string
          minLength: 1
          description: XYZ string to validate

    QuantumCalculationRequest:
      type: object
      required: [xyz]
      properties:
        xyz:
          type: string
          minLength: 1
          description: XYZ molecular structure data
        calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
          default: DFT
        basis_function:
          type: string
          default: "6-31G(d)"
          description: Basis set for calculation (e.g., STO-3G, 6-31G(d), 6-31+G(d,p), cc-pVDZ, aug-cc-pVTZ, def2-SVP)
        exchange_correlation:
          type: string
          default: "B3LYP"
          description: Exchange-correlation functional (e.g., B3LYP, PBE0, M06-2X, CAM-B3LYP, PBE, BLYP, M06, TPSS)
        charges:
          type: integer
          minimum: -10
          maximum: 10
          default: 0
          description: Molecular charge
        spin_multiplicity:
          type: integer
          minimum: 0
          maximum: 10
          default: 0
          description: Spin (2S), number of unpaired electrons
        solvent_method:
          $ref: '#/components/schemas/SolventMethod'
          default: none
        solvent:
          type: string
          default: "-"
          description: |
            Solvent type or custom parameters. Options include:
            - Predefined solvents: water, dimethylsulfoxide, n,n-dimethylformamide, nitromethane, methanol, ethanol, acetone, dichloroethane, dichloromethane, tetrahydrofuran, chlorobenzene, chloroform, diethylether, toluene, benzene, 1,4-dioxane, cyclohexane
            - Custom dielectric constant (numeric value > 1.0)
        name:
          type: string
          minLength: 1
          maxLength: 100
          default: "Unnamed Calculation"
          description: Name for the calculation
        cpu_cores:
          type: integer
          minimum: 1
          maximum: 32
          nullable: true
          description: Number of CPU cores
        memory_mb:
          type: integer
          minimum: 512
          maximum: 32768
          nullable: true
          description: Memory in MB
        tddft_nstates:
          type: integer
          minimum: 1
          maximum: 50
          default: 10
          description: Number of excited states to calculate (TDDFT only)
        tddft_method:
          type: string
          enum: [TDDFT, TDA]
          default: TDDFT
          description: TDDFT calculation method - TDDFT or Tamm-Dancoff approximation
        tddft_analyze_nto:
          type: boolean
          default: false
          description: Perform Natural Transition Orbital analysis (TDDFT only)

    CalculationUpdateRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Updated name for the calculation

    # Response Models
    HealthResponse:
      type: object
      required: [status, service, version]
      properties:
        status:
          type: string
          example: ok
        service:
          type: string
          example: pyscf-front-api
        version:
          type: string
          example: "0.3.0"

    PubChemCompoundInfo:
      type: object
      required: [cid, iupac_name, molecular_formula, molecular_weight, synonyms]
      properties:
        cid:
          type: integer
          description: PubChem Compound ID
        iupac_name:
          type: string
          description: IUPAC name
        molecular_formula:
          type: string
          description: Molecular formula
        molecular_weight:
          type: number
          description: Molecular weight
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms

    PubChemSearchResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [xyz, compound_info, atom_count]
          properties:
            xyz:
              type: string
              description: XYZ format molecular structure
            compound_info:
              $ref: '#/components/schemas/PubChemCompoundInfo'
            atom_count:
              type: integer
              description: Number of atoms in the molecule

    SMILESConvertResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          title: SMILESConvertData
          type: object
          required: [xyz]
          properties:
            xyz:
              type: string
              description: XYZ format molecular structure

    XYZValidateResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          description: Validation result
          required: [valid]
          properties:
            valid:
              type: boolean
              description: Whether the XYZ format is valid
            error:
              type: string
              description: Error message if validation failed
            num_atoms:
              type: integer
              description: Number of atoms in the molecule (if valid)
            title:
              type: string
              description: Title line from XYZ file (if valid)
            atoms:
              type: array
              description: Array of atom data (if valid)
              items:
                type: object
                required: [element, x, y, z]
                properties:
                  element:
                    type: string
                    description: Element symbol
                  x:
                    type: number
                    format: float
                    description: X coordinate
                  y:
                    type: number
                    format: float
                    description: Y coordinate
                  z:
                    type: number
                    format: float
                    description: Z coordinate

    CalculationParameters:
      type: object
      required: [calculation_method, basis_function, exchange_correlation, charges, spin_multiplicity, solvent_method, solvent, xyz]
      properties:
        calculation_method:
          $ref: '#/components/schemas/CalculationMethod'
        basis_function:
          type: string
        exchange_correlation:
          type: string
        charges:
          type: integer
        spin_multiplicity:
          type: integer
        solvent_method:
          $ref: '#/components/schemas/SolventMethod'
        solvent:
          type: string
        xyz:
          type: string
        molecule_name:
          type: string
          nullable: true
        cpu_cores:
          type: integer
          nullable: true
        memory_mb:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          nullable: true
        tddft_nstates:
          type: integer
          nullable: true
          description: Number of excited states (TDDFT only)
        tddft_method:
          type: string
          nullable: true
          description: TDDFT method used
        tddft_analyze_nto:
          type: boolean
          nullable: true
          description: Whether NTO analysis was performed

    CalculationResults:
      type: object
      properties:
        scf_energy:
          type: number
          description: SCF energy result
        converged:
          type: boolean
          description: Whether calculation converged
        homo_index:
          type: integer
          description: HOMO orbital index
        lumo_index:
          type: integer
          description: LUMO orbital index
        num_occupied_orbitals:
          type: integer
          description: Number of occupied orbitals
        num_virtual_orbitals:
          type: integer
          description: Number of virtual orbitals
        checkpoint_file:
          type: string
          description: Path to checkpoint file
        checkpoint_exists:
          type: boolean
          description: Whether checkpoint file exists
        working_directory:
          type: string
          description: Working directory path
        optimized_geometry:
          type: string
          description: Optimized molecular geometry
        basis:
          type: string
          description: Basis set used
        xc_functional:
          type: string
          description: Exchange-correlation functional used
        charge:
          type: number
          description: Molecular charge
        spin_multiplicity:
          type: integer
          description: Spin multiplicity
        max_cycle:
          type: integer
          description: Maximum SCF cycles
        atom_count:
          type: integer
          description: Number of atoms
        error:
          type: string
          nullable: true
          description: Error message if calculation failed
        excitation_energies:
          type: array
          items:
            type: number
          nullable: true
          description: Excitation energies in eV (TDDFT only)
        excitation_wavelengths:
          type: array
          items:
            type: number
          nullable: true
          description: Excitation wavelengths in nm (TDDFT only)
        oscillator_strengths:
          type: array
          items:
            type: number
          nullable: true
          description: Oscillator strengths for transitions (TDDFT only)
        transition_dipoles:
          type: array
          items:
            type: object
            properties:
              x:
                type: number
              y:
                type: number
              z:
                type: number
          nullable: true
          description: Transition dipole moments (TDDFT only)
        major_transitions:
          type: array
          items:
            type: object
            properties:
              state:
                type: integer
                description: Excited state number
              energy:
                type: number
                description: Excitation energy in eV
              wavelength:
                type: number
                description: Wavelength in nm
              oscillator_strength:
                type: number
                description: Oscillator strength
              dominant_transition:
                type: string
                description: Main orbital transition (e.g., HOMO -> LUMO)
          nullable: true
          description: Major orbital transitions (TDDFT only)
        nto_analysis:
          type: array
          items:
            type: object
            properties:
              state:
                type: integer
                description: Excited state number (1-indexed)
              energy:
                type: number
                description: Excitation energy in eV
              nto_pairs:
                type: array
                items:
                  type: object
                  properties:
                    hole_orbital:
                      type: string
                      description: Description of hole orbital (e.g., HOMO, HOMO-1)
                    particle_orbital:
                      type: string
                      description: Description of particle orbital (e.g., LUMO, LUMO+1)
                    weight:
                      type: number
                      description: NTO weight (singular value)
                    contribution:
                      type: number
                      description: Percentage contribution to the transition
                    hole_orbital_index:
                      type: integer
                      description: Index of the hole orbital
                    particle_orbital_index:
                      type: integer
                      description: Index of the particle orbital
                description: NTO orbital pairs for this excited state
              total_nto_pairs:
                type: integer
                description: Total number of NTO pairs analyzed
          nullable: true
          description: Natural Transition Orbital analysis results (TDDFT only)
        mulliken_charges:
          type: array
          items:
            type: object
            properties:
              atom_index:
                type: integer
                description: 0-based index of the atom
              element:
                type: string
                description: Element symbol (e.g., C, H, O, N)
              charge:
                type: number
                description: Mulliken charge on this atom (positive = electron deficient, negative = electron rich)
          nullable: true
          description: Mulliken population analysis charges for each atom
        frequency_analysis_performed:
          type: boolean
          nullable: true
          description: Whether vibrational frequency analysis was performed
        vibrational_frequencies:
          type: array
          items:
            type: number
          nullable: true
          description: Vibrational frequencies in cm⁻¹ (positive frequencies only, excluding low-frequency modes)
        imaginary_frequencies_count:
          type: integer
          nullable: true
          description: Number of imaginary frequencies (negative eigenvalues) - indicates optimization quality
        zero_point_energy:
          type: number
          nullable: true
          description: Zero-point vibrational energy in Hartree
        thermal_energy_298K:
          type: number
          nullable: true
          description: Thermal energy at 298.15 K in Hartree
        entropy_298K:
          type: number
          nullable: true
          description: Entropy at 298.15 K in Hartree/K
        gibbs_free_energy_298K:
          type: number
          nullable: true
          description: Gibbs free energy at 298.15 K in Hartree
        heat_capacity_298K:
          type: number
          nullable: true
          description: Heat capacity at 298.15 K in Hartree/K

    CalculationInstance:
      type: object
      required: [id, name, status, createdAt, updatedAt, parameters]
      properties:
        id:
          type: string
          description: Unique calculation ID
        name:
          type: string
          description: Display name for the calculation
        status:
          $ref: '#/components/schemas/CalculationStatus'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        parameters:
          $ref: '#/components/schemas/CalculationParameters'
        results:
          $ref: '#/components/schemas/CalculationResults'
          nullable: true
        workingDirectory:
          type: string
          nullable: true
          description: Path to calculation files
        errorMessage:
          type: string
          nullable: true
          description: Error details if status is error
        waitingReason:
          type: string
          nullable: true
          description: Reason why calculation is waiting (if status is waiting)

    CalculationSummary:
      type: object
      required: [id, name, path, date, has_checkpoint, status]
      properties:
        id:
          type: string
          description: Unique calculation ID
        name:
          type: string
          description: Display name
        path:
          type: string
          description: Directory path
        date:
          type: string
          description: Date string
        has_checkpoint:
          type: boolean
          description: Whether checkpoint file exists
        status:
          $ref: '#/components/schemas/CalculationStatus'

    StartCalculationResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [calculation]
          properties:
            calculation:
              $ref: '#/components/schemas/CalculationInstance'

    CalculationListResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [base_directory, calculations, count]
          properties:
            base_directory:
              type: string
              description: Base directory for calculations
            calculations:
              type: array
              items:
                $ref: '#/components/schemas/CalculationSummary'
            count:
              type: integer
              description: Number of calculations

    CalculationDetailsResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [calculation, files]
          properties:
            calculation:
              $ref: '#/components/schemas/CalculationInstance'
            files:
              type: object
              required: [checkpoint_exists, parameters_file_exists, results_file_exists]
              properties:
                checkpoint_exists:
                  type: boolean
                parameters_file_exists:
                  type: boolean
                results_file_exists:
                  type: boolean

    CalculationUpdateResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [message, name]
          properties:
            message:
              type: string
              example: Calculation renamed successfully.
            name:
              type: string
              description: Updated calculation name

    CalculationDeleteResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [message, deleted_id]
          properties:
            message:
              type: string
              example: Calculation deleted successfully
            deleted_id:
              type: string
              description: ID of deleted calculation

    # Molecular Orbital Schemas
    OrbitalInfo:
      type: object
      required: [index, energy_hartree, energy_ev, occupancy, orbital_type]
      properties:
        index:
          type: integer
          description: Orbital index (0-based)
        energy_hartree:
          type: number
          description: Orbital energy in Hartree
        energy_ev:
          type: number
          description: Orbital energy in eV
        occupancy:
          type: number
          description: Orbital occupancy (0.0 for virtual, 1.0 or 2.0 for occupied)
        orbital_type:
          type: string
          enum: [core, homo, lumo, virtual]
          description: Type of orbital
        label:
          type: string
          description: Human-readable label (e.g., "HOMO", "LUMO", "HOMO-1", "LUMO+2")

    OrbitalsResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [orbitals, homo_index, lumo_index, total_orbitals]
          properties:
            orbitals:
              type: array
              items:
                $ref: '#/components/schemas/OrbitalInfo'
              description: List of all molecular orbitals
            homo_index:
              type: integer
              description: Index of HOMO orbital
            lumo_index:
              type: integer
              description: Index of LUMO orbital
            total_orbitals:
              type: integer
              description: Total number of orbitals
            num_occupied:
              type: integer
              description: Number of occupied orbitals
            num_virtual:
              type: integer
              description: Number of virtual orbitals

    OrbitalCubeResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [cube_data, orbital_info, generation_params]
          properties:
            cube_data:
              type: string
              description: CUBE file content as string
            orbital_info:
              $ref: '#/components/schemas/OrbitalInfo'
            generation_params:
              type: object
              properties:
                grid_size:
                  type: integer
                  description: Grid size used for generation
                isovalue_positive:
                  type: number
                  description: Positive isovalue used
                isovalue_negative:
                  type: number
                  description: Negative isovalue used
                file_size_kb:
                  type: number
                  description: Generated file size in KB
            file_path:
              type: string
              nullable: true
              description: Path to saved CUBE file (if saved to disk)
            cached:
              type: boolean
              description: Whether the CUBE file was loaded from cache

    CubeFilesListResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [calculation_id, cube_files, total_files, total_size_kb]
          properties:
            calculation_id:
              type: string
              description: ID of the calculation
            cube_files:
              type: array
              description: List of CUBE files
              items:
                type: object
                required: [filename, file_path, orbital_index, grid_size, file_size_kb, modified]
                properties:
                  filename:
                    type: string
                    description: Name of the CUBE file
                  file_path:
                    type: string
                    description: Full path to the CUBE file
                  orbital_index:
                    type: integer
                    description: Index of the molecular orbital
                  grid_size:
                    type: integer
                    description: Grid size used for generation
                  file_size_kb:
                    type: number
                    description: File size in KB
                  modified:
                    type: string
                    format: date-time
                    description: Last modified timestamp
            total_files:
              type: integer
              description: Total number of CUBE files
            total_size_kb:
              type: number
              description: Total size of all CUBE files in KB

    CubeFilesDeleteResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [calculation_id, deleted_files, message]
          properties:
            calculation_id:
              type: string
              description: ID of the calculation
            orbital_index:
              type: integer
              nullable: true
              description: Orbital index that was deleted (if specific)
            deleted_files:
              type: integer
              description: Number of files deleted
            message:
              type: string
              description: Human-readable message about the deletion

    SolventOption:
      type: object
      required: [value, display, dielectric_constant]
      properties:
        value:
          type: string
          description: Solvent identifier value
        display:
          type: string
          description: Human-readable display name
        dielectric_constant:
          type: number
          description: Dielectric constant of the solvent

    SupportedParametersData:
      type: object
      required: [calculation_methods, basis_functions, exchange_correlation, solvent_methods, solvents, tddft_methods]
      properties:
        calculation_methods:
          type: array
          items:
            type: string
          description: Supported quantum calculation methods
        basis_functions:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Supported basis functions grouped by category (e.g., Minimal, Pople Style, etc.)
        exchange_correlation:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Supported exchange-correlation functionals grouped by category (e.g., Hybrid, GGA, etc.)
        solvent_methods:
          type: array
          items:
            type: string
          description: Supported solvent effect methods
        solvents:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/SolventOption'
          description: Supported solvents grouped by category (e.g., Highly Polar, Protic, etc.)
        tddft_methods:
          type: array
          items:
            type: string
          description: Supported TDDFT calculation methods

    SupportedParametersResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/SupportedParametersData'

    # Settings-related schemas
    AppSettings:
      type: object
      required: [max_parallel_instances, max_cpu_utilization_percent, max_memory_utilization_percent, system_total_cores, system_total_memory_mb]
      properties:
        max_parallel_instances:
          type: integer
          minimum: 1
          maximum: 32
          description: Maximum number of parallel calculation instances
          example: 4
        max_cpu_utilization_percent:
          type: number
          minimum: 10.0
          maximum: 100.0
          description: Maximum CPU utilization percentage for the system
          example: 80.0
        max_memory_utilization_percent:
          type: number
          minimum: 10.0
          maximum: 100.0
          description: Maximum memory utilization percentage for the system
          example: 80.0
        system_total_cores:
          type: integer
          minimum: 1
          description: Total number of CPU cores in the system (auto-detected)
          example: 8
        system_total_memory_mb:
          type: integer
          minimum: 1
          description: Total system memory in MB (auto-detected)
          example: 16384

    SettingsResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required: [settings]
          properties:
            settings:
              $ref: '#/components/schemas/AppSettings'

    SettingsUpdateRequest:
      $ref: '#/components/schemas/AppSettings'

    ErrorResponse:
      type: object
      required: [success, error]
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message

    # System resource-related schemas
    SystemResourceInfo:
      type: object
      required: [total_cpu_cores, total_memory_mb, available_memory_mb, cpu_usage_percent, memory_usage_percent, timestamp]
      properties:
        total_cpu_cores:
          type: integer
          minimum: 1
          description: Total number of CPU cores
          example: 8
        total_memory_mb:
          type: integer
          minimum: 1
          description: Total system memory in MB
          example: 16384
        available_memory_mb:
          type: integer
          minimum: 0
          description: Available system memory in MB
          example: 8192
        cpu_usage_percent:
          type: number
          minimum: 0.0
          maximum: 100.0
          description: Current CPU usage percentage
          example: 25.5
        memory_usage_percent:
          type: number
          minimum: 0.0
          maximum: 100.0
          description: Current memory usage percentage
          example: 50.2
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the resource info was collected

    ResourceConstraints:
      type: object
      required: [max_cpu_utilization_percent, max_memory_utilization_percent, max_allowed_cpu_cores, max_allowed_memory_mb]
      properties:
        max_cpu_utilization_percent:
          type: number
          minimum: 10.0
          maximum: 100.0
          description: Maximum CPU utilization percentage
          example: 80.0
        max_memory_utilization_percent:
          type: number
          minimum: 10.0
          maximum: 100.0
          description: Maximum memory utilization percentage
          example: 80.0
        max_allowed_cpu_cores:
          type: integer
          minimum: 1
          description: Maximum allowed CPU cores for calculations
          example: 6
        max_allowed_memory_mb:
          type: integer
          minimum: 1
          description: Maximum allowed memory in MB for calculations
          example: 13107

    AllocatedResources:
      type: object
      required: [total_allocated_cpu_cores, total_allocated_memory_mb, available_cpu_cores, available_memory_mb, active_calculations_count]
      properties:
        total_allocated_cpu_cores:
          type: integer
          minimum: 0
          description: Total CPU cores currently allocated to calculations
          example: 4
        total_allocated_memory_mb:
          type: integer
          minimum: 0
          description: Total memory in MB currently allocated to calculations
          example: 8192
        available_cpu_cores:
          type: integer
          minimum: 0
          description: Available CPU cores for new calculations
          example: 2
        available_memory_mb:
          type: integer
          minimum: 0
          description: Available memory in MB for new calculations
          example: 4915
        active_calculations_count:
          type: integer
          minimum: 0
          description: Number of active calculations
          example: 2

    SystemResourceSummary:
      type: object
      required: [system_info, resource_constraints, allocated_resources]
      properties:
        system_info:
          $ref: '#/components/schemas/SystemResourceInfo'
        resource_constraints:
          $ref: '#/components/schemas/ResourceConstraints'
        allocated_resources:
          $ref: '#/components/schemas/AllocatedResources'

    SystemResourceResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/SystemResourceSummary'

    IRSpectrumResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/IRSpectrumData'

    IRSpectrumData:
      type: object
      required: [calculation_id, spectrum, generation_info]
      properties:
        calculation_id:
          type: string
          description: Unique calculation ID
          example: "calc_20240101_120000_abcd1234"
        spectrum:
          $ref: '#/components/schemas/IRSpectrumDetails'
        generation_info:
          $ref: '#/components/schemas/IRGenerationInfo'

    IRSpectrumDetails:
      type: object
      required: [x_axis, y_axis, peaks, metadata]
      properties:
        x_axis:
          type: array
          items:
            type: number
          description: Wavenumber values (cm⁻¹) for the x-axis
          example: [400.0, 401.0, 402.0]
        y_axis:
          type: array
          items:
            type: number
          description: Intensity values for the y-axis (arbitrary units)
          example: [0.0, 0.1, 0.05]
        peaks:
          type: array
          items:
            $ref: '#/components/schemas/IRPeak'
          description: Individual peaks in the spectrum
        metadata:
          $ref: '#/components/schemas/IRSpectrumMetadata'

    IRPeak:
      type: object
      required: [frequency_cm, intensity, original_frequency_cm]
      properties:
        frequency_cm:
          type: number
          format: float
          description: Peak frequency after scale factor correction (cm⁻¹)
          example: 1654.2
        intensity:
          type: number
          format: float
          description: Peak intensity (arbitrary units)
          example: 120.5
        original_frequency_cm:
          type: number
          format: float
          description: Original calculated frequency before scale factor correction (cm⁻¹)
          example: 1723.1

    IRSpectrumMetadata:
      type: object
      required: [method, basis_set, scale_factor, scale_message, broadening_fwhm_cm, frequency_range_cm, num_peaks_total, num_peaks_in_range, num_points]
      properties:
        method:
          type: string
          description: Computational method used
          example: "B3LYP"
        basis_set:
          type: string
          description: Basis set used
          example: "6-31G*"
        scale_factor:
          type: number
          format: float
          description: Scale factor applied to frequencies
          example: 0.960
        scale_message:
          type: string
          description: Information about the scale factor source
          example: "Exact match found"
        broadening_fwhm_cm:
          type: number
          format: float
          description: Full width at half maximum for Lorentzian broadening (cm⁻¹)
          example: 100.0
        frequency_range_cm:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          description: Frequency range for the spectrum [min, max] (cm⁻¹)
          example: [400.0, 4000.0]
        num_peaks_total:
          type: integer
          description: Total number of calculated frequencies
          example: 24
        num_peaks_in_range:
          type: integer
          description: Number of peaks within the specified range
          example: 18
        num_points:
          type: integer
          description: Number of points in the spectrum
          example: 3000

    IRGenerationInfo:
      type: object
      required: [broadening_fwhm_cm, frequency_range_cm, peaks_marked, generated_at]
      properties:
        broadening_fwhm_cm:
          type: number
          format: float
          description: Full width at half maximum used for broadening (cm⁻¹)
          example: 100.0
        frequency_range_cm:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          description: Frequency range used [min, max] (cm⁻¹)
          example: [400.0, 4000.0]
        peaks_marked:
          type: boolean
          description: Whether individual peaks were marked in the plot
          example: true
        generated_at:
          type: string
          format: date-time
          description: ISO timestamp when the spectrum was generated
          example: "2024-01-01T12:00:00.000Z"